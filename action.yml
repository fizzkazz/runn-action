name: 'Run runn'
description: 'GitHub Action for runn, a tool for api scenario testing.'
branding:
  icon: 'octagon'
  color: 'gray-dark'
inputs:
  command:
    description: run or list or loadt
    required: true
    default: 'run'
  path_pattern:
    description: Path pattern
    required: true
  github-token:
    description: The GitHub token
    default: ${{ github.token }}
    required: false
  version:
    description: Specify runn version
    required: false
    default: "v0.90.1"
  debug:
    description: Filter runbooks to be executed
    required: false
    default: false
  verbose:
    description: Verbose mode
    required: false
    default: false
  fail-fast:
    description: Fail fast mode
    required: false
    default: false
  skip-test:
    description: Skip test mode
    required: false
    default: false
  shuffle:
    description: Shuffle mode
    required: false
    default: false
  concurrent:
    description: Concurrent mode
    required: false
    default: false
  enable-read-remote-scope:
    description: Required for reading remote files.(`--scopes read:remote`)
    required: false
    default: false
  enable-run-exec-scope:
    description: Required for running Exec runner.(`--scopes run:exec`)
    required: false
    default: false
  labels:
    description: To filter execution targets, specify labels separated by commas.(For example, `foo,bar` would be `--label "foo,bar"`)
    required: false

runs:
  using: 'composite'
  steps:
    - name: 'Check input parameter'
      shell: 'bash'
      run: |
        if [[ ! "${{ inputs.command }}" =~ ^(run|list|loadt)$ ]]; then
          echo "Error: Invalid command ${{ inputs.command }} is not supported. Please specify run or list or loadt."
          exit 1
        fi
    - name: Setup k1LoW/runn
      uses: k1LoW/gh-setup@v1
      with:
        github-token: ${{ inputs.github-token }}
        repo: k1LoW/runn
        version: ${{ inputs.version }}
    - name: 'Run runn'
      shell: 'bash'
      run: |
        if [ -n "${{ inputs.labels }}" ]; then
          LABEL_OPTIONS="--label \"${{ inputs.labels }}\""
        fi
        echo "label options: $LABEL_OPTIONS"
        runn \
          ${{ inputs.command }} \
          ${{ inputs.path_pattern }} \
          ${{ (inputs.debug == 'true' && '--debug') || '' }} \
          ${{ (inputs.verbose == 'true' && '--verbose') || '' }} \
          ${{ (inputs.fail-fast == 'true' && '--fail-fast') || '' }} \
          ${{ (inputs.skip-test == 'true' && '--skip-test') || '' }} \
          ${{ (inputs.shuffle == 'true' && '--shuffle on') || '' }} \
          ${{ (inputs.concurrent == 'true' && '--concurrent on') || '' }} \
          ${{ (inputs.enable-read-remote-scope == 'true' && inputs.enable-run-exec-scope == 'true' && '--scopes read:remote,run:exec') || '' }}  \
          ${{ (inputs.enable-read-remote-scope == 'true' && inputs.enable-run-exec-scope == 'false' && '--scopes read:remote') || '' }}  \
          ${{ (inputs.enable-read-remote-scope == 'false' && inputs.enable-run-exec-scope == 'true' && '--scopes run:exec') || '' }}  \
          $LABEL_OPTIONS
